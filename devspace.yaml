# yaml-language-server: $schema=/home/what/somefolder/schema.json
version: v1beta11

require:
  devspace: '>= 5.0.0'
  commands:
  - name: helm
    version: '>= 3.0.0'
  - name: kubectl
    version: '>= 1.16'

vars:
- name: IMAGE
  value: leventogut/app
- name: IMAGE_DEBUG
  value: leventogut/go:1.16-alpine

# `images` section removed to profile production
# By default it is assumed to have a development/debugging environment

# `deployments` list of deployments to be made, can be Helm, Kubectl manifests, Kustomizations
deployments:
- name: app
  helm:
    componentChart: true
    values:
      containers:
      - name: app
        image: ${IMAGE}
      service:
        ports:
        - port: 8080

# `dev` configuration applies when you run `devspace dev`
dev:
  logs:
    sync: false
    selectors:
    - imageSelector: ${IMAGE}

  autoReload:
    paths:
    - devspace.yaml

  ports:
  - imageSelector: ${IMAGE}
    forward:
    - port: 8080
  - imageSelector: ${IMAGE}
    forward:
    - port: 23450

  open:
  - url: http://localhost:8080 # Application port
  - url: http://localhost:8090 # DevSpace UI

  sync:
  - imageSelector: ${IMAGE}
    disableDownload: true
    uploadExcludeFile: .dockerignore
    onUpload:
      restartContainer: true

  replacePods:
  - name: debug
    imageSelector: ${IMAGE}
    replaceImage: ${IMAGE_DEBUG}
    patches:
    - op: replace
      path: spec.containers.name=app.command
      value:
      - "/.devspace/devspace-restart-helper"
    - op: replace
      path: spec.containers.name=app.args
      value:
      - "dlv"
      - "debug"
      - "--listen=:23450"
      - "--headless=true"
      - "--api-version=2"
      - "--accept-multiclient"
    - op: remove
      path: spec.containers.name=app.securityContext
    - op: replace
      path: spec.shareProcessNamespace
      value: true

# `profiles` lets you modify the config above for different environments (e.g. dev vs production)
profiles:
- name: production
  merge:
    images:
      app-image:
        image: "${IMAGE}"
        dockerfile: ./Dockerfile
        build:
          buildKit:
            inCluster:
              name: buildKit-builder
              namespace: kube-system
            skipPush: false
            args:
              - --platform
              - linux/amd64
              # - --cache-to
              # - type=registry,ref=${SERVICE_IMAGE}-cache
              # - --cache-from
              # - type=registry,ref=${SERVICE_IMAGE}-cache
